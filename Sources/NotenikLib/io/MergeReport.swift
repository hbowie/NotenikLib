//
//  MergeReport.swift
//  NotenikLib
//
//  Created by Herb Bowie on 6/4/19.
//  Copyright Â© 2019-2022 Herb Bowie (https://hbowie.net)
//
//  This programming code is published as open source software under the
//  terms of the MIT License (https://opensource.org/licenses/MIT).
//

import Foundation

import NotenikUtils

/// A report to be produced by using Notenik
public class MergeReport: CustomStringConvertible, Comparable {
    
    let scriptExt = "tcz"
    
    public var reportName = ""
    public var reportType = ""
    
    public init() {
        
    }
    
    public init(reportName: String, reportType: String) {
        self.reportName = reportName
        self.reportType = reportType
    }
    
    public var sortKey: String {
        return reportName + "." + reportType
    }
    
    public var description: String {
        var desc = "Report: "
        if reportType.lowercased() == "tcz" {
            desc.append(reportName)
        } else {
            if reportName.lowercased().contains("template") {
                let transform1 = reportName.replacingOccurrences(of: "_template", with: "")
                let transform2 = transform1.replacingOccurrences(of: "template", with: "")
                desc.append(transform2)
                desc.append(" => " + reportType)
            }
        }
        return desc
    }
    
    var fileName: String {
        return reportName + "." + reportType
    }
    
    public func getURL(folderPath: String) -> URL? {
        let reportPath = FileUtils.joinPaths(path1: folderPath,
                                              path2: fileName)
        let reportURL = URL(fileURLWithPath: reportPath)
        return reportURL
    }
    
    /// Is this report generated by a script? (If not, it must be a template.)
    var scriptType: Bool {
        return reportType.lowercased() == scriptExt
    }
    
    public static func < (lhs: MergeReport, rhs: MergeReport) -> Bool {
        return lhs.sortKey < rhs.sortKey
    }
    
    public static func == (lhs: MergeReport, rhs: MergeReport) -> Bool {
        return lhs.sortKey == rhs.sortKey
    }
    
    public func display() {
        print("MergeReport display")
        print("  - Report Name: \(reportName)")
        print("  - Report Type: \(reportType)")
        print("  - Description: \(description)")
        print("  - File Name:   \(fileName)")
    }
    
}
